/*
 * File    : Flash.h
 * Remark  : Macro to access Flash memory controller on chip.
 *           Fow now this is STM32F10XXX chipset.
 *
 */

#ifndef FLASH_H
#define FLASH_H

#include "..\Type.h"
#include "..\Bit.h"

#define FLASH_ACR				0x40022000		// 0x4002 2003 4
#define FLASH_KEYR				0x40022004		// 0x4002 2007 4
#define FLASH_OPTKEYR			0x40022008		// 0x4002 200B 4
#define FLASH_SR				0x4002200C		// 0x4002 200F 4
#define FLASH_CR				0x40022010		// 0x4002 2013 4
#define FLASH_AR				0x40022014		// 0x4002 2017 4
#define FLASH_Reserved			0x40022018		// 0x4002 201B 4
#define FLASH_OBR				0x4002201C		// 0x4002 201F 4
#define FLASH_WRPR				0x40022020		// 0x4002 2023 4

#define FLASH_OB0				0x1FFFF800
#define FLASH_OB1				0x1FFFF804
#define FLASH_OB2				0x1FFFF808
#define FLASH_OB3				0x1FFFF80C

#define FLASH_GET_PREF_BUF_STAT()		GET_IO_BIT(FLASH_ACR, BIT_5)
#define FLASH_ENA_PREF_BUF(Enable)		ENABLE_IO_BIT(FLASH_ACR, BIT_4, Enable)
#define FLASH_ENA_HALF_CYCL(Enable)		ENABLE_IO_BIT(FLASH_ACR, BIT_3, Enable)

#define FLASH_LATENCY__ZERO_WAIT_STATE		0x00
#define FLASH_LATENCY__ONE_WAIT_STATE		0x01
#define FLASH_LATENCY__TWO_WAIT_STATE		0x02

#define FLASH_SET_LATENCY(FlashLatency)	SET_IO_BITS(FLASH_ACR, BIT_0, BITMASK_3, FlashLatency)

#define FLASH_UNLOCK_MEMORY()				\
	IO_MEM32(FLASH_KEYR) = 0x45670123;		\
	IO_MEM32(FLASH_KEYR) = 0xCDEF89AB

#define FLASH_UNLOCK_OPTION_BYTE()			\
	IO_MEM32(FLASH_OPTKEYR) = 0x45670123;	\
	IO_MEM32(FLASH_OPTKEYR) = 0xCDEF89AB

#define FLASH_IS_BUSY()							GET_IO_BIT(FLASH_SR, BIT_0)

#define FLASH_IS_PROGRAMMING_ERROR()			GET_IO_BIT(FLASH_SR, BIT_2)
#define FLASH_CLEAR_PROGRAMMING_ERROR()			SET_IO_BIT(FLASH_SR, BIT_2)

#define FLASH_IS_WRITE_PROTECTION_ERROR()		GET_IO_BIT(FLASH_SR, BIT_4)
#define FLASH_CLEAR_WRITE_PROTECTION_ERROR()	SET_IO_BIT(FLASH_SR, BIT_4)

#define FLASH_IS_END_OF_OPERATION()				GET_IO_BIT(FLASH_SR, BIT_5)
#define FLASH_CLEAR_END_OF_OPERATION()			SET_IO_BIT(FLASH_SR, BIT_5)

#define FLASH_ENABLE_PROGRAMMING(Enable)				ENABLE_IO_BIT(FLASH_CR, BIT_0, Enable)
#define FLASH_ENABLE_PAGE_ERASE(Enable)					ENABLE_IO_BIT(FLASH_CR, BIT_1, Enable)
#define FLASH_ENABLE_MASS_ERASE(Enable)					ENABLE_IO_BIT(FLASH_CR, BIT_2, Enable)
#define FLASH_ENABLE_OPTION_BYTE_PROGRAMMING(Enable)	ENABLE_IO_BIT(FLASH_CR, BIT_4, Enable)
#define FLASH_ENABLE_OPTION_BYTE_ERASE(Enable)			ENABLE_IO_BIT(FLASH_CR, BIT_5, Enable)
#define FLASH_START_ERASE()								SET_IO_BIT(FLASH_CR, BIT_6)
#define FLASH_LOCK_MEMORY()								SET_IO_BIT(FLASH_CR, BIT_7)
#define FLASH_IS_MEMORY_LOCKED()						GET_IO_BIT(FLASH_CR, BIT_7)
#define FLASH_ENABLE_OPTION_BYTE_WRITE(Enable)			ENABLE_IO_BIT(FLASH_CR, BIT_9, Enable)
#define FLASH_ENABLE_ERROR_INTERRUPT(Enable)			ENABLE_IO_BIT(FLASH_CR, BIT_10, Enable)
#define FLASH_ENABLE_END_OF_OPERATION_INTERRUPT(Enable)	ENABLE_IO_BIT(FLASH_CR, BIT_12, Enable)

#define FLASH_WRITE_ADDRESS(CAddress)					IO_MEM32(FLASH_AR) = CAddress

#define FLASH_IS_OPTION_BYTE_ERROR()					GET_IO_BIT(FLASH_OBR, BIT_0)
#define FLASH_IS_READ_PROTECTION_ACTIVE()				GET_IO_BIT(FLASH_OBR, BIT_1)
#define FLASH_IS_WATCHDOG_SOFTWARE()					GET_IO_BIT(FLASH_OBR, BIT_2)
#define FLASH_IS_NO_RESET_WHEN_STOP()					GET_IO_BIT(FLASH_OBR, BIT_3)
#define FLASH_IS_NO_RESET_WHEN_STANDBY()				GET_IO_BIT(FLASH_OBR, BIT_4)
#define FLASH_GET_OPTION_BYTE_DATA0()					GET_IO_BITS(FLASH_OBR, BIT_10, BITMASK_8)
#define FLASH_GET_OPTION_BYTE_DATA1()					GET_IO_BITS(FLASH_OBR, BIT_18, BITMASK_8)

#define FLASH_GET_WRITE_PROTECT_STATUS()				IO_MEM32(FLASH_WRPR)

#define FLASH_DISABLE_READ_PROTECTION()					\
	SET_IO_BITS(FLASH_OB0, BIT_0, BITMASK_16, ((((UINT16_T) 0xBA) << 8) | 0xA5))

#define FLASH_ENABLE_RESET_ON_STOP()					CLR_IO_BIT(FLASH_OB0, BIT_17)
#define FLASH_ENABLE_RESET_ON_STANDBY()					CLR_IO_BIT(FLASH_OB0, BIT_18)
#define FLASH_SET_OPTION_BYTE_DATA0(Value)				SET_IO_BITS(FLASH_OB1, BIT_0, BITMASK_8, Value)
#define FLASH_SET_OPTION_BYTE_DATA1(Value)				SET_IO_BITS(FLASH_OB1, BIT_16, BITMASK_8, Value)

#endif  // End of FLASH_H
